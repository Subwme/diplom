{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCODE\\\\diplom\\\\client\\\\src\\\\components\\\\Form\\\\loginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { setUserAction } from \"../../store/reducers/reducer\";\nimport { useAppDispatch } from \"../../store\";\nimport { authentication } from \"../../apiProvider\";\nimport config from \"../../configServer.json\";\nimport \"./authentication.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const submitFunc = data => {\n    authentication(config.endPoint + \"/auth/sign-in\", data).then(user => {\n      dispatch(setUserAction(user));\n\n      if (user.isAdmin === false) {\n        history.push(\"/\");\n      }\n\n      if (user.isAdmin === true) {\n        history.push(\"/admin\");\n      }\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authentication-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(submitFunc),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"authentication-form__text\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register(\"email\", {\n              required: {\n                value: true,\n                message: \"Пожалуйста, укажите адрес электронной почты\"\n              },\n              pattern: {\n                value: /@/,\n                message: \"Email адрес должен содержать символ @\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email && errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"authentication-form__text\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"password\",\n            ...register(\"password\", {\n              required: {\n                value: true,\n                message: \"Укажите пароль...\"\n              },\n              minLength: {\n                value: 8,\n                message: \"Минимальная длина пароля 8 - символов\"\n              } // pattern: {\n              //   value: /([A-Z])([0-9])+/g,\n              //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\n              // },\n\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.password && errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: !isValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"mxfoLVTpjrL7IF1TwGmFhBGc9/c=\", false, function () {\n  return [useHistory, useAppDispatch, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/components/Form/loginForm.tsx"],"names":["useForm","setUserAction","useAppDispatch","authentication","config","useHistory","LoginForm","history","dispatch","register","handleSubmit","reset","formState","errors","isValid","mode","submitFunc","data","endPoint","then","user","isAdmin","push","required","value","message","pattern","email","minLength","password"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { ILoginData } from \"../../types\";\r\nimport { setUserAction } from \"../../store/reducers/reducer\";\r\nimport { useAppDispatch } from \"../../store\";\r\nimport { authentication } from \"../../apiProvider\";\r\nimport config from \"../../configServer.json\";\r\nimport \"./authentication.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm<ILoginData>({ mode: \"onChange\" });\r\n\r\n  const submitFunc = (data: ILoginData) => {\r\n    authentication(config.endPoint + \"/auth/sign-in\", data).then((user) => {\r\n      dispatch(setUserAction(user));\r\n      if (user.isAdmin === false) {\r\n        history.push(\"/\");\r\n      }\r\n      if (user.isAdmin === true) {\r\n        history.push(\"/admin\");\r\n      }\r\n    });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"authentication-form\">\r\n        <h1>Авторизация</h1>\r\n\r\n        <form onSubmit={handleSubmit(submitFunc)}>\r\n          <label className=\"label\">\r\n            <span className=\"authentication-form__text\">Email</span>\r\n            <input\r\n              type=\"text\"\r\n              {...register(\"email\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Пожалуйста, укажите адрес электронной почты\",\r\n                },\r\n                pattern: {\r\n                  value: /@/,\r\n                  message: \"Email адрес должен содержать символ @\",\r\n                },\r\n              })}\r\n            />\r\n          </label>\r\n          <p className=\"error\">{errors.email && errors.email.message}</p>\r\n\r\n          <label className=\"label\">\r\n            <span className=\"authentication-form__text\">Пароль</span>\r\n            <input\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              {...register(\"password\", {\r\n                required: { value: true, message: \"Укажите пароль...\" },\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Минимальная длина пароля 8 - символов\",\r\n                },\r\n                // pattern: {\r\n                //   value: /([A-Z])([0-9])+/g,\r\n                //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\r\n                // },\r\n              })}\r\n            />\r\n          </label>\r\n          <p className=\"error\">{errors.password && errors.password.message}</p>\r\n          <input type=\"submit\" disabled={!isValid} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}