{"ast":null,"code":"import config from \"./configServer.json\";\nexport const signUp = data => {};\nexport const getCategories = async () => {\n  const r = await fetchWithToken(config.endPoint + \"/category\", {\n    method: \"GET\"\n  });\n  return r.json();\n};\nexport const getProducts = async () => {\n  const r = await fetchWithToken(config.endPoint + \"/product\", {\n    method: \"GET\",\n    headers: {}\n  });\n  return r.json();\n};\n\nconst fetchWithToken = (url, options) => {\n  const token = localStorage.getItem(\"token\");\n\n  if (token === null) {\n    throw new Error(\"Unauthorized\");\n  }\n\n  const {\n    headers = {},\n    ...restOfOptions\n  } = options || {};\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      ...headers\n    },\n    ...restOfOptions\n  });\n};","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/apiProvider.ts"],"names":["config","signUp","data","getCategories","r","fetchWithToken","endPoint","method","json","getProducts","headers","url","options","token","localStorage","getItem","Error","restOfOptions","fetch","Authorization"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAGA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU,CAE/B,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,YAAkC;AAC7D,QAAMC,CAAC,GAAG,MAAMC,cAAc,CAACL,MAAM,CAACM,QAAP,GAAkB,WAAnB,EAAgC;AAC5DC,IAAAA,MAAM,EAAE;AADoD,GAAhC,CAA9B;AAGA,SAAOH,CAAC,CAACI,IAAF,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,YAAiC;AAC1D,QAAML,CAAC,GAAG,MAAMC,cAAc,CAACL,MAAM,CAACM,QAAP,GAAkB,UAAnB,EAA+B;AAC3DC,IAAAA,MAAM,EAAE,KADmD;AAE3DG,IAAAA,OAAO,EAAE;AAFkD,GAA/B,CAA9B;AAIA,SAAON,CAAC,CAACI,IAAF,EAAP;AACD,CANM;;AAQP,MAAMH,cAAc,GAAG,CAACM,GAAD,EAAcC,OAAd,KAAoD;AACzE,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAM,IAAIG,KAAJ,CAAU,cAAV,CAAN;AACD;;AACD,QAAM;AAAEN,IAAAA,OAAO,GAAG,EAAZ;AAAgB,OAAGO;AAAnB,MAAqCL,OAAO,IAAI,EAAtD;AAEA,SAAOM,KAAK,CAACP,GAAD,EAAM;AAChBD,IAAAA,OAAO,EAAE;AACPS,MAAAA,aAAa,EAAG,UAASN,KAAM,EADxB;AAEP,SAAGH;AAFI,KADO;AAKhB,OAAGO;AALa,GAAN,CAAZ;AAOD,CAdD","sourcesContent":["import config from \"./configServer.json\";\r\nimport { ICategory, IProduct } from \"./types\";\r\n\r\nexport const signUp = (data) => {\r\n  \r\n}\r\n\r\nexport const getCategories = async (): Promise<ICategory[]> => {\r\n  const r = await fetchWithToken(config.endPoint + \"/category\", {\r\n    method: \"GET\",\r\n  });\r\n  return r.json();\r\n};\r\n\r\nexport const getProducts = async (): Promise<IProduct[]> => {\r\n  const r = await fetchWithToken(config.endPoint + \"/product\", {\r\n    method: \"GET\",\r\n    headers: {},\r\n  });\r\n  return r.json();\r\n};\r\n\r\nconst fetchWithToken = (url: string, options?: RequestInit | undefined) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token === null) {\r\n    throw new Error(\"Unauthorized\");\r\n  }\r\n  const { headers = {}, ...restOfOptions } = options || {};\r\n\r\n  return fetch(url, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      ...headers,\r\n    },\r\n    ...restOfOptions,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}