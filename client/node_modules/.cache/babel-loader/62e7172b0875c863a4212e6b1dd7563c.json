{"ast":null,"code":"export let ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"SetUser\"] = \"set-user\";\n  ActionTypes[\"SetProducts\"] = \"set-products\";\n  ActionTypes[\"SetCategories\"] = \"set-categories\";\n  ActionTypes[\"SetSortBy\"] = \"sort-products\";\n})(ActionTypes || (ActionTypes = {}));","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/store/types.ts"],"names":["ActionTypes"],"mappings":"AASA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["import { IUser, IProduct, ICategory, ISortBy } from \"./../types\";\r\n\r\nexport interface IState {\r\n  user: IUser | null;\r\n  products: IProduct[];\r\n  categories: ICategory[];\r\n  sortBy: ISortBy;\r\n}\r\n\r\nexport enum ActionTypes {\r\n  SetUser = \"set-user\",\r\n  SetProducts = \"set-products\",\r\n  SetCategories = \"set-categories\",\r\n  SetSortBy = \"sort-products\",\r\n}\r\n\r\nexport interface SetUser {\r\n  type: ActionTypes.SetUser;\r\n  payload: IUser | null;\r\n}\r\n\r\nexport interface SetProducts {\r\n  type: ActionTypes.SetProducts;\r\n  payload: IProduct[];\r\n}\r\n\r\nexport interface SetCategories {\r\n  type: ActionTypes.SetCategories;\r\n  payload: ICategory[];\r\n}\r\n\r\nexport interface SetSortByAsc {\r\n  type: ActionTypes.SetSortBy;\r\n  sortBy: \"asc\";\r\n}\r\n\r\nexport interface SetSortByDesc {\r\n  type: ActionTypes.SetSortBy;\r\n  sortBy: \"desc\";\r\n}\r\n\r\nexport type Action =\r\n  | SetUser\r\n  | SetProducts\r\n  | SetCategories\r\n  | SetSortByAsc\r\n  | SetSortByAsc;\r\n"]},"metadata":{},"sourceType":"module"}