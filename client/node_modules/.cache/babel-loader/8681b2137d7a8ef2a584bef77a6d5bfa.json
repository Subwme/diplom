{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCODE\\\\diplom\\\\client\\\\src\\\\components\\\\Form\\\\loginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { setUserAction } from \"../../store/reducers/reducer\";\nimport { useAppDispatch } from \"../../store\";\nimport { authentication } from \"../../apiProvider\";\nimport config from \"../../configServer.json\";\nimport \"./authentification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const submitFunc = data => {\n    authentication(config.endPoint + \"/auth/sign-in\", data).then(user => {\n      dispatch(setUserAction(user));\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitFunc),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(\"email\", {\n            required: {\n              value: true,\n              message: \"Пожалуйста, укажите адрес электронной почты\"\n            },\n            pattern: {\n              value: /@/,\n              message: \"Email адрес должен содержать символ @\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email && errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"password\",\n          ...register(\"password\", {\n            required: {\n              value: true,\n              message: \"Укажите пароль...\"\n            },\n            minLength: {\n              value: 8,\n              message: \"Минимальная длина пароля 8 - символов\"\n            } // pattern: {\n            //   value: /([A-Z])([0-9])+/g,\n            //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\n            // },\n\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password && errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: !isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginForm, \"9E2A5L4QiaJTozLoQ/8mCRljoo4=\", false, function () {\n  return [useAppDispatch, useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/components/Form/loginForm.tsx"],"names":["useForm","setUserAction","useAppDispatch","authentication","config","LoginForm","dispatch","register","handleSubmit","reset","formState","errors","isValid","mode","submitFunc","data","endPoint","then","user","required","value","message","pattern","email","minLength","password"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,wBAAP;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,cAAc,EAA/B;AACA,QAAM;AACJK,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAJP,MAKFZ,OAAO,CAAa;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAAb,CALX;;AAOA,QAAMC,UAAU,GAAIC,IAAD,IAAsB;AACvCZ,IAAAA,cAAc,CAACC,MAAM,CAACY,QAAP,GAAkB,eAAnB,EAAoCD,IAApC,CAAd,CAAwDE,IAAxD,CAA8DC,IAAD,IAAU;AACrEZ,MAAAA,QAAQ,CAACL,aAAa,CAACiB,IAAD,CAAd,CAAR;AACD,KAFD;AAGAT,IAAAA,KAAK;AACN,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACM,UAAD,CAA5B;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAAA,aAEMP,QAAQ,CAAC,OAAD,EAAU;AACpBY,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB,aADU;AAEpBC,YAAAA,OAAO,EAAE;AACPF,cAAAA,KAAK,EAAE,GADA;AAEPC,cAAAA,OAAO,EAAE;AAFF;AAFW,WAAV;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBV,MAAM,CAACY,KAAP,IAAgBZ,MAAM,CAACY,KAAP,CAAaF;AAAnD;AAAA;AAAA;AAAA;AAAA,cAdF,eAgBE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,wEAEE;AACE,UAAA,YAAY,EAAC,KADf;AAEE,UAAA,IAAI,EAAC,UAFP;AAAA,aAGMd,QAAQ,CAAC,UAAD,EAAa;AACvBY,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB,aADa;AAEvBG,YAAAA,SAAS,EAAE;AACTJ,cAAAA,KAAK,EAAE,CADE;AAETC,cAAAA,OAAO,EAAE;AAFA,aAFY,CAMvB;AACA;AACA;AACA;;AATuB,WAAb;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAkCE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBV,MAAM,CAACc,QAAP,IAAmBd,MAAM,CAACc,QAAP,CAAgBJ;AAAzD;AAAA;AAAA;AAAA;AAAA,cAlCF,eAmCE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,CAACT;AAAhC;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA2CD,CA3DD;;GAAMP,S;UACaH,c,EAMbF,O;;;KAPAK,S;AA6DN,eAAeA,SAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { ILoginData } from \"../../types\";\r\nimport { setUserAction } from \"../../store/reducers/reducer\";\r\nimport { useAppDispatch } from \"../../store\";\r\nimport { authentication } from \"../../apiProvider\";\r\nimport config from \"../../configServer.json\";\r\nimport \"./authentification.css\"\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm<ILoginData>({ mode: \"onChange\" });\r\n\r\n  const submitFunc = (data: ILoginData) => {\r\n    authentication(config.endPoint + \"/auth/sign-in\", data).then((user) => {\r\n      dispatch(setUserAction(user));\r\n    });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Авторизация</h1>\r\n\r\n      <form onSubmit={handleSubmit(submitFunc)}>\r\n        <label className=\"label\">\r\n          Email\r\n          <input\r\n            type=\"text\"\r\n            {...register(\"email\", {\r\n              required: { value: true, message: \"Пожалуйста, укажите адрес электронной почты\" },\r\n              pattern: {\r\n                value: /@/,\r\n                message: \"Email адрес должен содержать символ @\",\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        <p className=\"error\">{errors.email && errors.email.message}</p>\r\n\r\n        <label className=\"label\">\r\n          Пароль\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            {...register(\"password\", {\r\n              required: { value: true, message: \"Укажите пароль...\" },\r\n              minLength: {\r\n                value: 8,\r\n                message: \"Минимальная длина пароля 8 - символов\",\r\n              },\r\n              // pattern: {\r\n              //   value: /([A-Z])([0-9])+/g,\r\n              //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\r\n              // },\r\n            })}\r\n          />\r\n        </label>\r\n        <p className=\"error\">{errors.password && errors.password.message}</p>\r\n        <input type=\"submit\" disabled={!isValid} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}