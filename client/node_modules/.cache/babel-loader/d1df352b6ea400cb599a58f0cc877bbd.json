{"ast":null,"code":"import config from \"./configServer.json\";\nexport const signUp = async data => {\n  const response = await fetch(config.endPoint + \"/auth/sign-up\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify(data)\n  });\n};\nexport const getCategories = async () => {\n  const r = await fetchWithToken(config.endPoint + \"/category\", {\n    method: \"GET\"\n  });\n  return r.json();\n};\nexport const getProducts = async () => {\n  const r = await fetchWithToken(config.endPoint + \"/product\", {\n    method: \"GET\",\n    headers: {}\n  });\n  return r.json();\n};\n\nconst fetchWithToken = (url, options) => {\n  const token = localStorage.getItem(\"token\");\n\n  if (token === null) {\n    throw new Error(\"Unauthorized\");\n  }\n\n  const {\n    headers = {},\n    ...restOfOptions\n  } = options || {};\n  return fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      ...headers\n    },\n    ...restOfOptions\n  });\n};","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/apiProvider.ts"],"names":["config","signUp","data","response","fetch","endPoint","method","headers","body","JSON","stringify","getCategories","r","fetchWithToken","json","getProducts","url","options","token","localStorage","getItem","Error","restOfOptions","Authorization"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAsC;AAC1D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAACK,QAAP,GAAkB,eAAnB,EAAoC;AAC9DC,IAAAA,MAAM,EAAE,MADsD;AAE9DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFqD;AAK9DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALwD,GAApC,CAA5B;AAOD,CARM;AAUP,OAAO,MAAMS,aAAa,GAAG,YAAkC;AAC7D,QAAMC,CAAC,GAAG,MAAMC,cAAc,CAACb,MAAM,CAACK,QAAP,GAAkB,WAAnB,EAAgC;AAC5DC,IAAAA,MAAM,EAAE;AADoD,GAAhC,CAA9B;AAGA,SAAOM,CAAC,CAACE,IAAF,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,YAAiC;AAC1D,QAAMH,CAAC,GAAG,MAAMC,cAAc,CAACb,MAAM,CAACK,QAAP,GAAkB,UAAnB,EAA+B;AAC3DC,IAAAA,MAAM,EAAE,KADmD;AAE3DC,IAAAA,OAAO,EAAE;AAFkD,GAA/B,CAA9B;AAIA,SAAOK,CAAC,CAACE,IAAF,EAAP;AACD,CANM;;AAQP,MAAMD,cAAc,GAAG,CAACG,GAAD,EAAcC,OAAd,KAAoD;AACzE,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAM,IAAIG,KAAJ,CAAU,cAAV,CAAN;AACD;;AACD,QAAM;AAAEd,IAAAA,OAAO,GAAG,EAAZ;AAAgB,OAAGe;AAAnB,MAAqCL,OAAO,IAAI,EAAtD;AAEA,SAAOb,KAAK,CAACY,GAAD,EAAM;AAChBT,IAAAA,OAAO,EAAE;AACPgB,MAAAA,aAAa,EAAG,UAASL,KAAM,EADxB;AAEP,SAAGX;AAFI,KADO;AAKhB,OAAGe;AALa,GAAN,CAAZ;AAOD,CAdD","sourcesContent":["import config from \"./configServer.json\";\r\nimport { ICategory, IProduct, IRegisterData, IUser } from \"./types\";\r\n\r\nexport const signUp = async (data: IRegisterData): IUser => {\r\n  const response = await fetch(config.endPoint + \"/auth/sign-up\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n}\r\n\r\nexport const getCategories = async (): Promise<ICategory[]> => {\r\n  const r = await fetchWithToken(config.endPoint + \"/category\", {\r\n    method: \"GET\",\r\n  });\r\n  return r.json();\r\n};\r\n\r\nexport const getProducts = async (): Promise<IProduct[]> => {\r\n  const r = await fetchWithToken(config.endPoint + \"/product\", {\r\n    method: \"GET\",\r\n    headers: {},\r\n  });\r\n  return r.json();\r\n};\r\n\r\nconst fetchWithToken = (url: string, options?: RequestInit | undefined) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token === null) {\r\n    throw new Error(\"Unauthorized\");\r\n  }\r\n  const { headers = {}, ...restOfOptions } = options || {};\r\n\r\n  return fetch(url, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      ...headers,\r\n    },\r\n    ...restOfOptions,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}