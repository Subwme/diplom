{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCODE\\\\diplom\\\\client\\\\src\\\\components\\\\Category\\\\Category.tsx\",\n    _s = $RefreshSig$();\n\nimport { useAppDispatch } from \"../../store\";\nimport { setSelectedCategoryAction } from \"../../store/reducers/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Category = props => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  let selectedCategory = useA;\n\n  const handleSelectedCategory = id => {\n    dispatch(setSelectedCategoryAction(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleSelectedCategory(props.category._id),\n    children: props.category.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/components/Category/Category.tsx"],"names":["useAppDispatch","setSelectedCategoryAction","Category","props","dispatch","selectedCategory","useA","handleSelectedCategory","id","category","_id","name"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,SAASC,yBAAT,QAA0C,8BAA1C;;AAOA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAmB;AAAA;;AACzC,QAAMC,QAAQ,GAAGJ,cAAc,EAA/B;AACA,MAAIK,gBAAgB,GAAGC,IAAvB;;AACA,QAAMC,sBAAsB,GAAIC,EAAD,IAAgB;AAC7CJ,IAAAA,QAAQ,CAACH,yBAAyB,CAACO,EAAD,CAA1B,CAAR;AACD,GAFD;;AAGA,sBACE;AAAQ,IAAA,OAAO,EAAE,MAAMD,sBAAsB,CAACJ,KAAK,CAACM,QAAN,CAAeC,GAAhB,CAA7C;AAAA,cACGP,KAAK,CAACM,QAAN,CAAeE;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXM;;GAAMT,Q;UACMF,c;;;KADNE,Q","sourcesContent":["import { useAppDispatch } from \"../../store\";\r\nimport { setSelectedCategoryAction } from \"../../store/reducers/reducer\";\r\nimport { ICategory } from \"../../types\";\r\n\r\ninterface IProps {\r\n  category: ICategory;\r\n}\r\n\r\nexport const Category = (props: IProps) => {\r\n  const dispatch = useAppDispatch();\r\n  let selectedCategory = useA\r\n  const handleSelectedCategory = (id: string) => {\r\n    dispatch(setSelectedCategoryAction(id));\r\n  };\r\n  return (\r\n    <button onClick={() => handleSelectedCategory(props.category._id)}>\r\n      {props.category.name}\r\n    </button>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}