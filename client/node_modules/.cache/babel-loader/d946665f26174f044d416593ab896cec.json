{"ast":null,"code":"import { ActionTypes } from \"../types\";\nconst initialState = {\n  user: null,\n  products: [],\n  categories: []\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.SetUser:\n      return { ...state,\n        user: action.payload\n      };\n\n    case ActionTypes.SetProducts:\n      return { ...state,\n        products: action.payload\n      };\n\n    case ActionTypes.SetCategories:\n      return { ...state,\n        categories: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setUserAction = payload => ({\n  type: ActionTypes.SetUser,\n  payload\n});\nexport const setProductsAction = payload => ({\n  type: ActionTypes.SetProducts,\n  payload\n});","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/store/reducers/reducer.ts"],"names":["ActionTypes","initialState","user","products","categories","reducer","state","action","type","SetUser","payload","SetProducts","SetCategories","setUserAction","setProductsAction"],"mappings":"AACA,SAAiBA,WAAjB,QAAiF,UAAjF;AAEA,MAAMC,YAAoB,GAAG;AAC3BC,EAAAA,IAAI,EAAE,IADqB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,UAAU,EAAE;AAHe,CAA7B;AAMA,OAAO,MAAMC,OAAO,GAAG,YAAkD;AAAA,MAAjDC,KAAiD,uEAAzCL,YAAyC;AAAA,MAA3BM,MAA2B;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,OAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYJ,QAAAA,IAAI,EAAEK,MAAM,CAACG;AAAzB,OAAP;;AACF,SAAKV,WAAW,CAACW,WAAjB;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAA7B,OAAP;;AACF,SAAKV,WAAW,CAACY,aAAjB;AACE,aAAO,EAAC,GAAGN,KAAJ;AAAWF,QAAAA,UAAU,EAAEG,MAAM,CAACG;AAA9B,OAAP;;AACF;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXM;AAaP,OAAO,MAAMO,aAAa,GAAIH,OAAD,KAA8B;AACzDF,EAAAA,IAAI,EAAER,WAAW,CAACS,OADuC;AAEzDC,EAAAA;AAFyD,CAA9B,CAAtB;AAKP,OAAO,MAAMI,iBAAiB,GAAIJ,OAAD,KAAuC;AACtEF,EAAAA,IAAI,EAAER,WAAW,CAACW,WADoD;AAEtED,EAAAA;AAFsE,CAAvC,CAA1B","sourcesContent":["import { IProduct, IUser } from \"./../../types\";\r\nimport { IState, ActionTypes, SetUser, Action, SetProducts, SetCategories } from \"../types\";\r\n\r\nconst initialState: IState = {\r\n  user: null,\r\n  products: [],\r\n  categories: []\r\n};\r\n\r\nexport const reducer = (state = initialState, action: Action): IState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetUser:\r\n      return { ...state, user: action.payload };\r\n    case ActionTypes.SetProducts:\r\n      return { ...state, products: action.payload };\r\n    case ActionTypes.SetCategories:\r\n      return {...state, categories: action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserAction = (payload: IUser): SetUser => ({\r\n  type: ActionTypes.SetUser,\r\n  payload,\r\n});\r\n\r\nexport const setProductsAction = (payload: IProduct[]): SetProducts => ({\r\n  type: ActionTypes.SetProducts,\r\n  payload,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}