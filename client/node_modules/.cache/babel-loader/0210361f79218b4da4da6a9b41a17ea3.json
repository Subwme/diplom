{"ast":null,"code":"import { ActionTypes } from \"../types\";\nconst initialState = {\n  user: null,\n  products: [],\n  categories: [],\n  sortBy: null,\n  searchText: \"\",\n  selectedCategoryName: null\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.SetUser:\n      return { ...state,\n        user: action.payload\n      };\n\n    case ActionTypes.SetProducts:\n      return { ...state,\n        products: action.payload\n      };\n\n    case ActionTypes.SetCategories:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case ActionTypes.SetSortByAsc:\n      return { ...state,\n        sortBy: \"asc\"\n      };\n\n    case ActionTypes.SetSortByDesc:\n      return { ...state,\n        sortBy: \"desc\"\n      };\n\n    case ActionTypes.SetSearchText:\n      return { ...state,\n        searchText: action.payload\n      };\n\n    case ActionTypes.SetSelectedCategory:\n      re;\n\n    default:\n      return state;\n  }\n};\nexport const setUserAction = payload => ({\n  type: ActionTypes.SetUser,\n  payload\n});\nexport const setProductsAction = payload => ({\n  type: ActionTypes.SetProducts,\n  payload\n});\nexport const setCategoriesAction = payload => ({\n  type: ActionTypes.SetCategories,\n  payload\n});\nexport const setSortByAscAction = () => ({\n  type: ActionTypes.SetSortByAsc\n});\nexport const setSortByDescAction = () => ({\n  type: ActionTypes.SetSortByDesc\n});\nexport const setSearchTextAction = payload => ({\n  type: ActionTypes.SetSearchText,\n  payload\n});","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/store/reducers/reducer.ts"],"names":["ActionTypes","initialState","user","products","categories","sortBy","searchText","selectedCategoryName","reducer","state","action","type","SetUser","payload","SetProducts","SetCategories","SetSortByAsc","SetSortByDesc","SetSearchText","SetSelectedCategory","re","setUserAction","setProductsAction","setCategoriesAction","setSortByAscAction","setSortByDescAction","setSearchTextAction"],"mappings":"AACA,SAEEA,WAFF,QAUO,UAVP;AAYA,MAAMC,YAAoB,GAAG;AAC3BC,EAAAA,IAAI,EAAE,IADqB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,UAAU,EAAE,EAHe;AAI3BC,EAAAA,MAAM,EAAE,IAJmB;AAK3BC,EAAAA,UAAU,EAAE,EALe;AAM3BC,EAAAA,oBAAoB,EAAE;AANK,CAA7B;AASA,OAAO,MAAMC,OAAO,GAAG,YAAkD;AAAA,MAAjDC,KAAiD,uEAAzCR,YAAyC;AAAA,MAA3BS,MAA2B;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,OAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYP,QAAAA,IAAI,EAAEQ,MAAM,CAACG;AAAzB,OAAP;;AACF,SAAKb,WAAW,CAACc,WAAjB;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYN,QAAAA,QAAQ,EAAEO,MAAM,CAACG;AAA7B,OAAP;;AACF,SAAKb,WAAW,CAACe,aAAjB;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYL,QAAAA,UAAU,EAAEM,MAAM,CAACG;AAA/B,OAAP;;AACF,SAAKb,WAAW,CAACgB,YAAjB;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYJ,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACF,SAAKL,WAAW,CAACiB,aAAjB;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYJ,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACF,SAAKL,WAAW,CAACkB,aAAjB;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAA/B,OAAP;;AACF,SAAKb,WAAW,CAACmB,mBAAjB;AACEC,MAAAA,EAAE;;AACJ;AACE,aAAOX,KAAP;AAhBJ;AAkBD,CAnBM;AAqBP,OAAO,MAAMY,aAAa,GAAIR,OAAD,KAA8B;AACzDF,EAAAA,IAAI,EAAEX,WAAW,CAACY,OADuC;AAEzDC,EAAAA;AAFyD,CAA9B,CAAtB;AAKP,OAAO,MAAMS,iBAAiB,GAAIT,OAAD,KAAuC;AACtEF,EAAAA,IAAI,EAAEX,WAAW,CAACc,WADoD;AAEtED,EAAAA;AAFsE,CAAvC,CAA1B;AAKP,OAAO,MAAMU,mBAAmB,GAAIV,OAAD,KAA0C;AAC3EF,EAAAA,IAAI,EAAEX,WAAW,CAACe,aADyD;AAE3EF,EAAAA;AAF2E,CAA1C,CAA5B;AAKP,OAAO,MAAMW,kBAAkB,GAAG,OAAqB;AACrDb,EAAAA,IAAI,EAAEX,WAAW,CAACgB;AADmC,CAArB,CAA3B;AAIP,OAAO,MAAMS,mBAAmB,GAAG,OAAsB;AACvDd,EAAAA,IAAI,EAAEX,WAAW,CAACiB;AADqC,CAAtB,CAA5B;AAIP,OAAO,MAAMS,mBAAmB,GAAIb,OAAD,KAAqC;AACtEF,EAAAA,IAAI,EAAEX,WAAW,CAACkB,aADoD;AAEtEL,EAAAA;AAFsE,CAArC,CAA5B","sourcesContent":["import { ICategory, IProduct, IUser } from \"./../../types\";\r\nimport {\r\n  IState,\r\n  ActionTypes,\r\n  SetUser,\r\n  Action,\r\n  SetProducts,\r\n  SetCategories,\r\n  SetSortByAsc,\r\n  SetSortByDesc,\r\n  SetSearchText,\r\n} from \"../types\";\r\n\r\nconst initialState: IState = {\r\n  user: null,\r\n  products: [],\r\n  categories: [],\r\n  sortBy: null,\r\n  searchText: \"\",\r\n  selectedCategoryName: null,\r\n};\r\n\r\nexport const reducer = (state = initialState, action: Action): IState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SetUser:\r\n      return { ...state, user: action.payload };\r\n    case ActionTypes.SetProducts:\r\n      return { ...state, products: action.payload };\r\n    case ActionTypes.SetCategories:\r\n      return { ...state, categories: action.payload };\r\n    case ActionTypes.SetSortByAsc:\r\n      return { ...state, sortBy: \"asc\" };\r\n    case ActionTypes.SetSortByDesc:\r\n      return { ...state, sortBy: \"desc\" };\r\n    case ActionTypes.SetSearchText:\r\n      return { ...state, searchText: action.payload };\r\n    case ActionTypes.SetSelectedCategory:\r\n      re\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserAction = (payload: IUser): SetUser => ({\r\n  type: ActionTypes.SetUser,\r\n  payload,\r\n});\r\n\r\nexport const setProductsAction = (payload: IProduct[]): SetProducts => ({\r\n  type: ActionTypes.SetProducts,\r\n  payload,\r\n});\r\n\r\nexport const setCategoriesAction = (payload: ICategory[]): SetCategories => ({\r\n  type: ActionTypes.SetCategories,\r\n  payload,\r\n});\r\n\r\nexport const setSortByAscAction = (): SetSortByAsc => ({\r\n  type: ActionTypes.SetSortByAsc,\r\n});\r\n\r\nexport const setSortByDescAction = (): SetSortByDesc => ({\r\n  type: ActionTypes.SetSortByDesc,\r\n});\r\n\r\nexport const setSearchTextAction = (payload: string): SetSearchText => ({\r\n  type: ActionTypes.SetSearchText,\r\n  payload,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}