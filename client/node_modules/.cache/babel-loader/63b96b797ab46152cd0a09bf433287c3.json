{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCODE\\\\diplom\\\\client\\\\src\\\\components\\\\registerForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { setUserAction } from \"../store/reducers/reducer\";\nimport { useAppDispatch } from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const submitFunc = async data => {\n    // запрос sign-up / sign-in\n    dispatch(setUserAction(user));\n    reset(); // replce главная страница ?\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitFunc),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"\\u0418\\u043C\\u044F\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          ...register(\"name\", {\n            required: {\n              value: true,\n              message: \"Укажите ваше имя...\"\n            },\n            minLength: {\n              value: 3,\n              message: \"Минимальная длина имени 3 - символа\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.name && errors.name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          ...register(\"email\", {\n            required: {\n              value: true,\n              message: \"Email адрес обязателен\"\n            },\n            pattern: {\n              value: /@/,\n              message: \"Email адрес должен содержать символ @\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email && errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          type: \"password\",\n          ...register(\"password\", {\n            required: {\n              value: true,\n              message: \"Укажите пароль...\"\n            },\n            minLength: {\n              value: 8,\n              message: \"Минимальная длина пароля 8 - символов\"\n            } // pattern: {\n            //   value: /([A-Z])([0-9])+/g,\n            //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\n            // },\n\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password && errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: !isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegisterForm, \"9E2A5L4QiaJTozLoQ/8mCRljoo4=\", false, function () {\n  return [useAppDispatch, useForm];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["D:/VSCODE/diplom/client/src/components/registerForm.tsx"],"names":["useForm","setUserAction","useAppDispatch","RegisterForm","dispatch","register","handleSubmit","reset","formState","errors","isValid","mode","submitFunc","data","user","required","value","message","minLength","name","pattern","email","password"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,cAAT,QAA+B,UAA/B;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGF,cAAc,EAA/B;AACA,QAAM;AACJG,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAJP,MAKFV,OAAO,CAAgB;AAAEW,IAAAA,IAAI,EAAE;AAAR,GAAhB,CALX;;AAOA,QAAMC,UAAU,GAAG,MAAOC,IAAP,IAA+B;AAChD;AAEET,IAAAA,QAAQ,CAACH,aAAa,CAACa,IAAD,CAAd,CAAR;AACAP,IAAAA,KAAK,GAJyC,CAOhD;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACM,UAAD,CAA5B;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,sDAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,oBAFd;AAAA,aAGMP,QAAQ,CAAC,MAAD,EAAS;AACnBU,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB,aADS;AAEnBC,YAAAA,SAAS,EAAE;AACTF,cAAAA,KAAK,EAAE,CADE;AAETC,cAAAA,OAAO,EAAE;AAFA;AAFQ,WAAT;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBR,MAAM,CAACU,IAAP,IAAeV,MAAM,CAACU,IAAP,CAAYF;AAAjD;AAAA;AAAA;AAAA;AAAA,cAfF,eAiBE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,qIAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAAA,aAGMZ,QAAQ,CAAC,OAAD,EAAU;AACpBU,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB,aADU;AAEpBG,YAAAA,OAAO,EAAE;AACPJ,cAAAA,KAAK,EAAE,GADA;AAEPC,cAAAA,OAAO,EAAE;AAFF;AAFW,WAAV;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eA+BE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBR,MAAM,CAACY,KAAP,IAAgBZ,MAAM,CAACY,KAAP,CAAaJ;AAAnD;AAAA;AAAA;AAAA;AAAA,cA/BF,eAiCE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,wEAEE;AACE,UAAA,YAAY,EAAC,KADf;AAEE,UAAA,IAAI,EAAC,UAFP;AAAA,aAGMZ,QAAQ,CAAC,UAAD,EAAa;AACvBU,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB,aADa;AAEvBC,YAAAA,SAAS,EAAE;AACTF,cAAAA,KAAK,EAAE,CADE;AAETC,cAAAA,OAAO,EAAE;AAFA,aAFY,CAMvB;AACA;AACA;AACA;;AATuB,WAAb;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eAmDE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBR,MAAM,CAACa,QAAP,IAAmBb,MAAM,CAACa,QAAP,CAAgBL;AAAzD;AAAA;AAAA;AAAA;AAAA,cAnDF,eAoDE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAE,CAACP;AAAhC;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA4DD,CA/ED;;GAAMP,Y;UACaD,c,EAMbF,O;;;KAPAG,Y;AAiFN,eAAeA,YAAf","sourcesContent":["import config from \"../configServer.json\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IRegisterData, IUser } from \"../types\";\r\nimport { setUserAction } from \"../store/reducers/reducer\";\r\nimport { useAppDispatch } from \"../store\";\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm<IRegisterData>({ mode: \"onChange\" }); \r\n\r\n  const submitFunc = async (data: IRegisterData) => {\r\n    // запрос sign-up / sign-in\r\n    \r\n      dispatch(setUserAction(user));\r\n      reset();\r\n    \r\n\r\n    // replce главная страница ?\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Регистрация</h1>\r\n\r\n      <form onSubmit={handleSubmit(submitFunc)}>\r\n        <label className=\"label\">\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            {...register(\"name\", {\r\n              required: { value: true, message: \"Укажите ваше имя...\" },\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Минимальная длина имени 3 - символа\",\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        <p className=\"error\">{errors.name && errors.name.message}</p>\r\n\r\n        <label className=\"label\">\r\n          Электронная почта\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            {...register(\"email\", {\r\n              required: { value: true, message: \"Email адрес обязателен\" },\r\n              pattern: {\r\n                value: /@/,\r\n                message: \"Email адрес должен содержать символ @\",\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        <p className=\"error\">{errors.email && errors.email.message}</p>\r\n\r\n        <label className=\"label\">\r\n          Пароль\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            {...register(\"password\", {\r\n              required: { value: true, message: \"Укажите пароль...\" },\r\n              minLength: {\r\n                value: 8,\r\n                message: \"Минимальная длина пароля 8 - символов\",\r\n              },\r\n              // pattern: {\r\n              //   value: /([A-Z])([0-9])+/g,\r\n              //   message: \"Пароль должен содержать хотябы одну заглавную букву\",\r\n              // },\r\n            })}\r\n          />\r\n        </label>\r\n        <p className=\"error\">{errors.password && errors.password.message}</p>\r\n        <input type=\"submit\" disabled={!isValid} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}